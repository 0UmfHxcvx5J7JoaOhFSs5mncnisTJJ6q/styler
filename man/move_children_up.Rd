% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/relevel.R
\name{move_children_up}
\alias{move_children_up}
\title{Move children up if appropriate}
\usage{
move_children_up(pd_nested, token = c("'+'", "'-'", "SPECIAL", "'/'", "'*'"))
}
\arguments{
\item{pd_nested}{A nested parse table to reorganize.}

\item{token}{Character vector with tokens that can cause a child to be moved
up.}
}
\description{
Move children one level of nesting up if necessary. If any was moved up,
check again whether any child of the former child should be moved up in a
recursive way.
}
\details{
A child is moved up under the following conditions:
\itemize{
\item The parent of the child to be considered for moving up (that is simply
the corresponding row in \code{pd_nested}) is not a top-level expression.
Otherwise, the second expression may be indented due to operator
indention(e.g. in "1+1; 1+1").
\item The child has one of \code{token} in the parse table. The first token is not
considered to propper handle signs (see \code{\link[=pd_has_token_not_first]{pd_has_token_not_first()}}).
\item One of \code{token} also appears before or after the child in \code{pd_nested}.
For example, there is no need to move any child up in the expression
"{1+1}", since then, operator and bracket indention would conflict.
}
}
